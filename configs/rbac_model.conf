# 这是Casbin的RBAC(基于角色的访问控制)模型配置文件
# 该文件定义了权限模型的结构和规则

# 请求定义部分 - 定义了请求的组成部分
# r.sub: 表示请求主体(如用户角色)
# r.obj: 表示请求对象(如API路径)
# r.act: 表示请求操作(如GET, POST)
[request_definition]
r = sub, obj, act

# 策略定义部分 - 定义了策略规则的组成部分
# p.sub: 表示允许访问的主体(如用户角色)
# p.obj: 表示允许访问的资源对象(如API路径)
# p.act: 表示允许的操作方法(如GET, POST, *)
[policy_definition]
p = sub, obj, act

# 角色定义部分 - 定义了角色继承关系
# g(r1, r2): 表示r1继承r2的所有权限
# 例如: g(admin, user)表示admin角色继承user角色的所有权限
[role_definition]
g = _, _

# 策略效果部分 - 定义了如何评估多个策略的结果
# 这里使用some(where (p.eft == allow))表示只要有一条策略允许访问，就允许访问
[policy_effect]
e = some(where (p.eft == allow))

# 匹配器部分 - 定义了如何匹配请求和策略
# g(r.sub, p.sub): 检查请求主体是否继承了策略中的主体角色
# keyMatch2(r.obj, p.obj): 使用高级路径匹配，支持通配符(如/api/v1/*)
# (r.act == p.act || p.act == "*"): 检查请求操作是否匹配策略操作，或策略操作是通配符
[matchers]
m = g(r.sub, p.sub) && keyMatch2(r.obj, p.obj) && (r.act == p.act || p.act == "*") 